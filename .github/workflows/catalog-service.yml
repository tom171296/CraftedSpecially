
name: Catalog service CI/CD
run-name: ${{ github.actor }} is building the catalog service ðŸš€

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUILD_CONFIGURATION: Release

permissions: {}

jobs:

  analysis:
    name: Static/Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Trivy scan (repo)
        run: |
          docker run --rm \
            -e TRIVY_DB_REPOSITORY=public.ecr.aws/aquasecurity/trivy-db,aquasec/trivy-db,ghcr.io/aquasecurity/ \
            -v "${{ github.workspace }}:/src" \
            aquasec/trivy@sha256:5b6e8c4f0c5a0b9f7e8f0d3a2a4c5d2f8e3e2e1f0a9b8c7d6e5f4c3b2a1f0e9d \
            fs -f json --scanners vuln,secret,misconfig \
            --exit-code 1 --severity HIGH,CRITICAL /src

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Restore dependencies
        run: dotnet restore ./Services/Catalog/Catalog.Api/Catalog.Api.csproj --locked-mode

      - name: Check for vulnerable dependencies
        run: dotnet list ./Services/Catalog/Catalog.Api/Catalog.Api.csproj package --vulnerable

      - name: Build
        run: dotnet build ./Services/Catalog/Catalog.Api/Catalog.Api.csproj --no-restore --configuration Release

      - name: Run unit tests
        run: dotnet test ./Services/Catalog/Catalog.Tests/Catalog.Tests.csproj --no-restore --no-build --logger trx

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*.trx'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: catalog-api-build-output
          path: |
            **/bin/${{ env.BUILD_CONFIGURATION }}/

  sign_and_provenance: 
    name: Sign & Attest
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist

      - name: Generate provenance
        uses: slsa-framework/slsa-github-generator/actions/generator@v2.1.0
        with:
          artifact_path: dist
          provenance_name: provenance.intoto.jsonl